// Code generated by protoc-gen-go. DO NOT EDIT.
// source: carheating/carheatingpb/seats.proto

package carheatingpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//welcomes user
type Welcome struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Welcome) Reset()         { *m = Welcome{} }
func (m *Welcome) String() string { return proto.CompactTextString(m) }
func (*Welcome) ProtoMessage()    {}
func (*Welcome) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a793f01fa190117, []int{0}
}

func (m *Welcome) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Welcome.Unmarshal(m, b)
}
func (m *Welcome) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Welcome.Marshal(b, m, deterministic)
}
func (m *Welcome) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Welcome.Merge(m, src)
}
func (m *Welcome) XXX_Size() int {
	return xxx_messageInfo_Welcome.Size(m)
}
func (m *Welcome) XXX_DiscardUnknown() {
	xxx_messageInfo_Welcome.DiscardUnknown(m)
}

var xxx_messageInfo_Welcome proto.InternalMessageInfo

func (m *Welcome) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WelcomeRequest struct {
	Welcome              *Welcome `protobuf:"bytes,1,opt,name=welcome,proto3" json:"welcome,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WelcomeRequest) Reset()         { *m = WelcomeRequest{} }
func (m *WelcomeRequest) String() string { return proto.CompactTextString(m) }
func (*WelcomeRequest) ProtoMessage()    {}
func (*WelcomeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a793f01fa190117, []int{1}
}

func (m *WelcomeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WelcomeRequest.Unmarshal(m, b)
}
func (m *WelcomeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WelcomeRequest.Marshal(b, m, deterministic)
}
func (m *WelcomeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WelcomeRequest.Merge(m, src)
}
func (m *WelcomeRequest) XXX_Size() int {
	return xxx_messageInfo_WelcomeRequest.Size(m)
}
func (m *WelcomeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WelcomeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WelcomeRequest proto.InternalMessageInfo

func (m *WelcomeRequest) GetWelcome() *Welcome {
	if m != nil {
		return m.Welcome
	}
	return nil
}

type WelcomeResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WelcomeResponse) Reset()         { *m = WelcomeResponse{} }
func (m *WelcomeResponse) String() string { return proto.CompactTextString(m) }
func (*WelcomeResponse) ProtoMessage()    {}
func (*WelcomeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a793f01fa190117, []int{2}
}

func (m *WelcomeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WelcomeResponse.Unmarshal(m, b)
}
func (m *WelcomeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WelcomeResponse.Marshal(b, m, deterministic)
}
func (m *WelcomeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WelcomeResponse.Merge(m, src)
}
func (m *WelcomeResponse) XXX_Size() int {
	return xxx_messageInfo_WelcomeResponse.Size(m)
}
func (m *WelcomeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WelcomeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WelcomeResponse proto.InternalMessageInfo

func (m *WelcomeResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type Heating struct {
	Seat                 string   `protobuf:"bytes,1,opt,name=seat,proto3" json:"seat,omitempty"`
	Seat2                string   `protobuf:"bytes,2,opt,name=seat2,proto3" json:"seat2,omitempty"`
	Seat3                string   `protobuf:"bytes,3,opt,name=seat3,proto3" json:"seat3,omitempty"`
	Seat4                string   `protobuf:"bytes,4,opt,name=seat4,proto3" json:"seat4,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heating) Reset()         { *m = Heating{} }
func (m *Heating) String() string { return proto.CompactTextString(m) }
func (*Heating) ProtoMessage()    {}
func (*Heating) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a793f01fa190117, []int{3}
}

func (m *Heating) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heating.Unmarshal(m, b)
}
func (m *Heating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heating.Marshal(b, m, deterministic)
}
func (m *Heating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heating.Merge(m, src)
}
func (m *Heating) XXX_Size() int {
	return xxx_messageInfo_Heating.Size(m)
}
func (m *Heating) XXX_DiscardUnknown() {
	xxx_messageInfo_Heating.DiscardUnknown(m)
}

var xxx_messageInfo_Heating proto.InternalMessageInfo

func (m *Heating) GetSeat() string {
	if m != nil {
		return m.Seat
	}
	return ""
}

func (m *Heating) GetSeat2() string {
	if m != nil {
		return m.Seat2
	}
	return ""
}

func (m *Heating) GetSeat3() string {
	if m != nil {
		return m.Seat3
	}
	return ""
}

func (m *Heating) GetSeat4() string {
	if m != nil {
		return m.Seat4
	}
	return ""
}

type HeatingRequest struct {
	Heating              *Heating `protobuf:"bytes,1,opt,name=heating,proto3" json:"heating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeatingRequest) Reset()         { *m = HeatingRequest{} }
func (m *HeatingRequest) String() string { return proto.CompactTextString(m) }
func (*HeatingRequest) ProtoMessage()    {}
func (*HeatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a793f01fa190117, []int{4}
}

func (m *HeatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeatingRequest.Unmarshal(m, b)
}
func (m *HeatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeatingRequest.Marshal(b, m, deterministic)
}
func (m *HeatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeatingRequest.Merge(m, src)
}
func (m *HeatingRequest) XXX_Size() int {
	return xxx_messageInfo_HeatingRequest.Size(m)
}
func (m *HeatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeatingRequest proto.InternalMessageInfo

func (m *HeatingRequest) GetHeating() *Heating {
	if m != nil {
		return m.Heating
	}
	return nil
}

type HeatingResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeatingResponse) Reset()         { *m = HeatingResponse{} }
func (m *HeatingResponse) String() string { return proto.CompactTextString(m) }
func (*HeatingResponse) ProtoMessage()    {}
func (*HeatingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a793f01fa190117, []int{5}
}

func (m *HeatingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeatingResponse.Unmarshal(m, b)
}
func (m *HeatingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeatingResponse.Marshal(b, m, deterministic)
}
func (m *HeatingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeatingResponse.Merge(m, src)
}
func (m *HeatingResponse) XXX_Size() int {
	return xxx_messageInfo_HeatingResponse.Size(m)
}
func (m *HeatingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeatingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeatingResponse proto.InternalMessageInfo

func (m *HeatingResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

//welcomes user
type Complete struct {
	Final                string   `protobuf:"bytes,1,opt,name=final,proto3" json:"final,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Complete) Reset()         { *m = Complete{} }
func (m *Complete) String() string { return proto.CompactTextString(m) }
func (*Complete) ProtoMessage()    {}
func (*Complete) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a793f01fa190117, []int{6}
}

func (m *Complete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Complete.Unmarshal(m, b)
}
func (m *Complete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Complete.Marshal(b, m, deterministic)
}
func (m *Complete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Complete.Merge(m, src)
}
func (m *Complete) XXX_Size() int {
	return xxx_messageInfo_Complete.Size(m)
}
func (m *Complete) XXX_DiscardUnknown() {
	xxx_messageInfo_Complete.DiscardUnknown(m)
}

var xxx_messageInfo_Complete proto.InternalMessageInfo

func (m *Complete) GetFinal() string {
	if m != nil {
		return m.Final
	}
	return ""
}

type CompleteRequest struct {
	Complete             *Complete `protobuf:"bytes,1,opt,name=complete,proto3" json:"complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CompleteRequest) Reset()         { *m = CompleteRequest{} }
func (m *CompleteRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteRequest) ProtoMessage()    {}
func (*CompleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a793f01fa190117, []int{7}
}

func (m *CompleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteRequest.Unmarshal(m, b)
}
func (m *CompleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteRequest.Marshal(b, m, deterministic)
}
func (m *CompleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteRequest.Merge(m, src)
}
func (m *CompleteRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteRequest.Size(m)
}
func (m *CompleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteRequest proto.InternalMessageInfo

func (m *CompleteRequest) GetComplete() *Complete {
	if m != nil {
		return m.Complete
	}
	return nil
}

type CompleteResponse struct {
	Finish               string   `protobuf:"bytes,1,opt,name=finish,proto3" json:"finish,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteResponse) Reset()         { *m = CompleteResponse{} }
func (m *CompleteResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteResponse) ProtoMessage()    {}
func (*CompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a793f01fa190117, []int{8}
}

func (m *CompleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteResponse.Unmarshal(m, b)
}
func (m *CompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteResponse.Marshal(b, m, deterministic)
}
func (m *CompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteResponse.Merge(m, src)
}
func (m *CompleteResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteResponse.Size(m)
}
func (m *CompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteResponse proto.InternalMessageInfo

func (m *CompleteResponse) GetFinish() string {
	if m != nil {
		return m.Finish
	}
	return ""
}

func init() {
	proto.RegisterType((*Welcome)(nil), "carheating.Welcome")
	proto.RegisterType((*WelcomeRequest)(nil), "carheating.WelcomeRequest")
	proto.RegisterType((*WelcomeResponse)(nil), "carheating.WelcomeResponse")
	proto.RegisterType((*Heating)(nil), "carheating.Heating")
	proto.RegisterType((*HeatingRequest)(nil), "carheating.HeatingRequest")
	proto.RegisterType((*HeatingResponse)(nil), "carheating.HeatingResponse")
	proto.RegisterType((*Complete)(nil), "carheating.Complete")
	proto.RegisterType((*CompleteRequest)(nil), "carheating.CompleteRequest")
	proto.RegisterType((*CompleteResponse)(nil), "carheating.CompleteResponse")
}

func init() {
	proto.RegisterFile("carheating/carheatingpb/seats.proto", fileDescriptor_5a793f01fa190117)
}

var fileDescriptor_5a793f01fa190117 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x5f, 0x4f, 0xf2, 0x30,
	0x14, 0xc6, 0xe1, 0x85, 0x97, 0x3f, 0x07, 0x03, 0xa6, 0x12, 0xb3, 0x80, 0x26, 0xa4, 0xde, 0xa8,
	0x89, 0x80, 0x1b, 0xf7, 0x26, 0x62, 0x22, 0xd7, 0x78, 0x61, 0xe2, 0x8d, 0x29, 0xcb, 0x41, 0x96,
	0x8c, 0x6d, 0xae, 0x45, 0xbf, 0xa0, 0x1f, 0xcc, 0x74, 0x6d, 0xd7, 0x61, 0x96, 0x78, 0x21, 0x57,
	0xeb, 0x79, 0xce, 0x93, 0x5f, 0x9f, 0xd3, 0xae, 0x70, 0xe1, 0xb3, 0x74, 0x83, 0x4c, 0x04, 0xd1,
	0xdb, 0xc4, 0x2e, 0x93, 0xd5, 0x84, 0x23, 0x13, 0x7c, 0x9c, 0xa4, 0xb1, 0x88, 0x09, 0xd8, 0x0e,
	0x3d, 0x87, 0xe6, 0x33, 0x86, 0x7e, 0xbc, 0x45, 0x42, 0xa0, 0x1e, 0xb1, 0x2d, 0x3a, 0xd5, 0x51,
	0xf5, 0xb2, 0xbd, 0xcc, 0xd6, 0xf4, 0x0e, 0xba, 0xba, 0xbd, 0xc4, 0xf7, 0x1d, 0x72, 0x41, 0x6e,
	0xa0, 0xf9, 0xa9, 0x94, 0xcc, 0xd8, 0x71, 0x4f, 0xc6, 0x16, 0x37, 0x36, 0x66, 0xe3, 0xa1, 0x57,
	0xd0, 0xcb, 0x01, 0x3c, 0x89, 0x23, 0x8e, 0xe4, 0x14, 0x1a, 0x29, 0xf2, 0x5d, 0x28, 0xf4, 0x4e,
	0xba, 0xa2, 0xaf, 0xd0, 0x5c, 0x28, 0x8c, 0x8c, 0x22, 0x03, 0x9b, 0x28, 0x72, 0x4d, 0xfa, 0xf0,
	0x5f, 0x7e, 0x5d, 0xe7, 0x5f, 0x26, 0xaa, 0xc2, 0xa8, 0x9e, 0x53, 0xb3, 0xaa, 0x67, 0xd4, 0x99,
	0x53, 0xb7, 0xea, 0x4c, 0x0e, 0xa3, 0x37, 0x28, 0x0c, 0xa3, 0x93, 0x97, 0x0d, 0x63, 0xcc, 0xc6,
	0x23, 0x87, 0xc9, 0x01, 0xbf, 0x0c, 0x33, 0x82, 0xd6, 0x3c, 0xde, 0x26, 0x21, 0x0a, 0x94, 0x69,
	0xd6, 0x41, 0xc4, 0x42, 0x6d, 0x51, 0x05, 0x9d, 0x43, 0xcf, 0x38, 0x4c, 0x9c, 0x29, 0xb4, 0x7c,
	0x2d, 0xe9, 0x3c, 0xfd, 0x62, 0x9e, 0xdc, 0x9e, 0xbb, 0xe8, 0x35, 0x1c, 0x5b, 0x88, 0x8d, 0xb4,
	0x0e, 0xa2, 0x80, 0x6f, 0x4c, 0x24, 0x55, 0xb9, 0x5f, 0x35, 0xe8, 0xc8, 0xf8, 0x4f, 0x98, 0x7e,
	0x04, 0x3e, 0x92, 0x07, 0x7b, 0xf5, 0x83, 0xb2, 0x3b, 0x54, 0xa1, 0x06, 0xc3, 0xd2, 0x9e, 0xda,
	0x8b, 0x56, 0xc8, 0x02, 0xda, 0x0a, 0xca, 0xc4, 0xed, 0x3e, 0x67, 0xff, 0xac, 0xf7, 0x39, 0x3f,
	0x8e, 0x91, 0x56, 0xa6, 0xd5, 0x22, 0xc9, 0x3d, 0x18, 0xc9, 0x3b, 0x18, 0x69, 0xf6, 0x37, 0xd2,
	0x63, 0xe1, 0x87, 0x18, 0x96, 0xde, 0xaa, 0x26, 0x9d, 0x95, 0x37, 0x0d, 0xea, 0xbe, 0xfb, 0x72,
	0x54, 0x7c, 0xd9, 0xab, 0x46, 0xf6, 0xa8, 0xbd, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x47, 0x79,
	0xd7, 0x5b, 0xfb, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HeatServiceClient is the client API for HeatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HeatServiceClient interface {
	Welcome(ctx context.Context, in *WelcomeRequest, opts ...grpc.CallOption) (*WelcomeResponse, error)
	HeatSeat1(ctx context.Context, in *HeatingRequest, opts ...grpc.CallOption) (HeatService_HeatSeat1Client, error)
	HeatSeat2(ctx context.Context, in *HeatingRequest, opts ...grpc.CallOption) (HeatService_HeatSeat2Client, error)
	HeatSeat3(ctx context.Context, in *HeatingRequest, opts ...grpc.CallOption) (HeatService_HeatSeat3Client, error)
	HeatSeat4(ctx context.Context, in *HeatingRequest, opts ...grpc.CallOption) (HeatService_HeatSeat4Client, error)
	Complete(ctx context.Context, in *CompleteRequest, opts ...grpc.CallOption) (*CompleteResponse, error)
}

type heatServiceClient struct {
	cc *grpc.ClientConn
}

func NewHeatServiceClient(cc *grpc.ClientConn) HeatServiceClient {
	return &heatServiceClient{cc}
}

func (c *heatServiceClient) Welcome(ctx context.Context, in *WelcomeRequest, opts ...grpc.CallOption) (*WelcomeResponse, error) {
	out := new(WelcomeResponse)
	err := c.cc.Invoke(ctx, "/carheating.HeatService/Welcome", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heatServiceClient) HeatSeat1(ctx context.Context, in *HeatingRequest, opts ...grpc.CallOption) (HeatService_HeatSeat1Client, error) {
	stream, err := c.cc.NewStream(ctx, &_HeatService_serviceDesc.Streams[0], "/carheating.HeatService/HeatSeat1", opts...)
	if err != nil {
		return nil, err
	}
	x := &heatServiceHeatSeat1Client{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HeatService_HeatSeat1Client interface {
	Recv() (*HeatingResponse, error)
	grpc.ClientStream
}

type heatServiceHeatSeat1Client struct {
	grpc.ClientStream
}

func (x *heatServiceHeatSeat1Client) Recv() (*HeatingResponse, error) {
	m := new(HeatingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *heatServiceClient) HeatSeat2(ctx context.Context, in *HeatingRequest, opts ...grpc.CallOption) (HeatService_HeatSeat2Client, error) {
	stream, err := c.cc.NewStream(ctx, &_HeatService_serviceDesc.Streams[1], "/carheating.HeatService/HeatSeat2", opts...)
	if err != nil {
		return nil, err
	}
	x := &heatServiceHeatSeat2Client{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HeatService_HeatSeat2Client interface {
	Recv() (*HeatingResponse, error)
	grpc.ClientStream
}

type heatServiceHeatSeat2Client struct {
	grpc.ClientStream
}

func (x *heatServiceHeatSeat2Client) Recv() (*HeatingResponse, error) {
	m := new(HeatingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *heatServiceClient) HeatSeat3(ctx context.Context, in *HeatingRequest, opts ...grpc.CallOption) (HeatService_HeatSeat3Client, error) {
	stream, err := c.cc.NewStream(ctx, &_HeatService_serviceDesc.Streams[2], "/carheating.HeatService/HeatSeat3", opts...)
	if err != nil {
		return nil, err
	}
	x := &heatServiceHeatSeat3Client{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HeatService_HeatSeat3Client interface {
	Recv() (*HeatingResponse, error)
	grpc.ClientStream
}

type heatServiceHeatSeat3Client struct {
	grpc.ClientStream
}

func (x *heatServiceHeatSeat3Client) Recv() (*HeatingResponse, error) {
	m := new(HeatingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *heatServiceClient) HeatSeat4(ctx context.Context, in *HeatingRequest, opts ...grpc.CallOption) (HeatService_HeatSeat4Client, error) {
	stream, err := c.cc.NewStream(ctx, &_HeatService_serviceDesc.Streams[3], "/carheating.HeatService/HeatSeat4", opts...)
	if err != nil {
		return nil, err
	}
	x := &heatServiceHeatSeat4Client{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HeatService_HeatSeat4Client interface {
	Recv() (*HeatingResponse, error)
	grpc.ClientStream
}

type heatServiceHeatSeat4Client struct {
	grpc.ClientStream
}

func (x *heatServiceHeatSeat4Client) Recv() (*HeatingResponse, error) {
	m := new(HeatingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *heatServiceClient) Complete(ctx context.Context, in *CompleteRequest, opts ...grpc.CallOption) (*CompleteResponse, error) {
	out := new(CompleteResponse)
	err := c.cc.Invoke(ctx, "/carheating.HeatService/Complete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HeatServiceServer is the server API for HeatService service.
type HeatServiceServer interface {
	Welcome(context.Context, *WelcomeRequest) (*WelcomeResponse, error)
	HeatSeat1(*HeatingRequest, HeatService_HeatSeat1Server) error
	HeatSeat2(*HeatingRequest, HeatService_HeatSeat2Server) error
	HeatSeat3(*HeatingRequest, HeatService_HeatSeat3Server) error
	HeatSeat4(*HeatingRequest, HeatService_HeatSeat4Server) error
	Complete(context.Context, *CompleteRequest) (*CompleteResponse, error)
}

// UnimplementedHeatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHeatServiceServer struct {
}

func (*UnimplementedHeatServiceServer) Welcome(ctx context.Context, req *WelcomeRequest) (*WelcomeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Welcome not implemented")
}
func (*UnimplementedHeatServiceServer) HeatSeat1(req *HeatingRequest, srv HeatService_HeatSeat1Server) error {
	return status.Errorf(codes.Unimplemented, "method HeatSeat1 not implemented")
}
func (*UnimplementedHeatServiceServer) HeatSeat2(req *HeatingRequest, srv HeatService_HeatSeat2Server) error {
	return status.Errorf(codes.Unimplemented, "method HeatSeat2 not implemented")
}
func (*UnimplementedHeatServiceServer) HeatSeat3(req *HeatingRequest, srv HeatService_HeatSeat3Server) error {
	return status.Errorf(codes.Unimplemented, "method HeatSeat3 not implemented")
}
func (*UnimplementedHeatServiceServer) HeatSeat4(req *HeatingRequest, srv HeatService_HeatSeat4Server) error {
	return status.Errorf(codes.Unimplemented, "method HeatSeat4 not implemented")
}
func (*UnimplementedHeatServiceServer) Complete(ctx context.Context, req *CompleteRequest) (*CompleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Complete not implemented")
}

func RegisterHeatServiceServer(s *grpc.Server, srv HeatServiceServer) {
	s.RegisterService(&_HeatService_serviceDesc, srv)
}

func _HeatService_Welcome_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WelcomeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeatServiceServer).Welcome(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carheating.HeatService/Welcome",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeatServiceServer).Welcome(ctx, req.(*WelcomeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HeatService_HeatSeat1_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HeatingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HeatServiceServer).HeatSeat1(m, &heatServiceHeatSeat1Server{stream})
}

type HeatService_HeatSeat1Server interface {
	Send(*HeatingResponse) error
	grpc.ServerStream
}

type heatServiceHeatSeat1Server struct {
	grpc.ServerStream
}

func (x *heatServiceHeatSeat1Server) Send(m *HeatingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HeatService_HeatSeat2_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HeatingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HeatServiceServer).HeatSeat2(m, &heatServiceHeatSeat2Server{stream})
}

type HeatService_HeatSeat2Server interface {
	Send(*HeatingResponse) error
	grpc.ServerStream
}

type heatServiceHeatSeat2Server struct {
	grpc.ServerStream
}

func (x *heatServiceHeatSeat2Server) Send(m *HeatingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HeatService_HeatSeat3_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HeatingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HeatServiceServer).HeatSeat3(m, &heatServiceHeatSeat3Server{stream})
}

type HeatService_HeatSeat3Server interface {
	Send(*HeatingResponse) error
	grpc.ServerStream
}

type heatServiceHeatSeat3Server struct {
	grpc.ServerStream
}

func (x *heatServiceHeatSeat3Server) Send(m *HeatingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HeatService_HeatSeat4_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HeatingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HeatServiceServer).HeatSeat4(m, &heatServiceHeatSeat4Server{stream})
}

type HeatService_HeatSeat4Server interface {
	Send(*HeatingResponse) error
	grpc.ServerStream
}

type heatServiceHeatSeat4Server struct {
	grpc.ServerStream
}

func (x *heatServiceHeatSeat4Server) Send(m *HeatingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HeatService_Complete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeatServiceServer).Complete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carheating.HeatService/Complete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeatServiceServer).Complete(ctx, req.(*CompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HeatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "carheating.HeatService",
	HandlerType: (*HeatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Welcome",
			Handler:    _HeatService_Welcome_Handler,
		},
		{
			MethodName: "Complete",
			Handler:    _HeatService_Complete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "HeatSeat1",
			Handler:       _HeatService_HeatSeat1_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "HeatSeat2",
			Handler:       _HeatService_HeatSeat2_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "HeatSeat3",
			Handler:       _HeatService_HeatSeat3_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "HeatSeat4",
			Handler:       _HeatService_HeatSeat4_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "carheating/carheatingpb/seats.proto",
}
