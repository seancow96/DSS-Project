package clientui;

import client.RadioClient;
import java.awt.Color;
import serviceui.Printer;

/**
 *
 * @author dominic
 */
public class RadioClientGUI extends javax.swing.JFrame implements Printer {

    private RadioClient client;

    public RadioClientGUI() {
        initComponents();
    }

    public RadioClientGUI(RadioClient aThis) {
        this();
        this.client = aThis;
        RadioOn.setEnabled(true);
        RadioOff.setEnabled(false);
        Channel1.setEnabled(false);
        Channel2.setEnabled(false);
        Channel3.setEnabled(false);
        Channel4.setEnabled(false);
     

    }
    
 
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        RadioOn = new javax.swing.JButton();
        RadioOff = new javax.swing.JButton();
        Channel1 = new javax.swing.JButton();
        Channel4 = new javax.swing.JButton();
        Channel3 = new javax.swing.JButton();
        Channel2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        RadioOn.setText("Radio On");
        RadioOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioOnActionPerformed(evt);
            }
        });

        RadioOff.setText("Radio Off");
        RadioOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioOffActionPerformed(evt);
            }
        });

        Channel1.setText("Fm 104");
        Channel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Channel1ActionPerformed(evt);
            }
        });

        Channel4.setText("98FM");
        Channel4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Channel4ActionPerformed(evt);
            }
        });

        Channel3.setText("Near FM");
        Channel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Channel3ActionPerformed(evt);
            }
        });

        Channel2.setText("Radio Nova");
        Channel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Channel2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(RadioOn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(RadioOff))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Channel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Channel3)))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Channel4)
                            .addComponent(Channel1))
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RadioOn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(RadioOff)
                                .addComponent(Channel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Channel3)
                                .addComponent(Channel2))
                            .addComponent(Channel4)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RadioOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioOnActionPerformed
        client.turnradioon();
        RadioOn.setEnabled(false);
        RadioOff.setEnabled(true);
        Channel1.setEnabled(true);
        Channel2.setEnabled(true);
        Channel3.setEnabled(true);
        Channel4.setEnabled(true);
     

        // TODO add your handling code here:
    }//GEN-LAST:event_RadioOnActionPerformed

    private void RadioOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioOffActionPerformed
        client.turntheradiooff();
        RadioOn.setEnabled(true);
        RadioOff.setEnabled(false);
        Channel1.setEnabled(false);
        Channel2.setEnabled(false);
        Channel3.setEnabled(false);
        Channel4.setEnabled(false);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_RadioOffActionPerformed

    private void Channel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Channel1ActionPerformed
  client.channel1();
  Channel1.setEnabled(false);
  Channel2.setEnabled(true);
  Channel3.setEnabled(true);

  
  
        // TODO add your handling code here:
    }//GEN-LAST:event_Channel1ActionPerformed

    private void Channel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Channel2ActionPerformed
client.channel2();
Channel2.setEnabled(false);
Channel4.setEnabled(true);
Channel3.setEnabled(true);
Channel1.setEnabled(true);



        // TODO add your handling code here:
    }//GEN-LAST:event_Channel2ActionPerformed

    private void Channel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Channel3ActionPerformed
client.channel3();
Channel3.setEnabled(false);
Channel2.setEnabled(true);
Channel1.setEnabled(true);
Channel4.setEnabled(true);



        // TODO add your handling code here:
    }//GEN-LAST:event_Channel3ActionPerformed

    private void Channel4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Channel4ActionPerformed
client.channel4();
Channel4.setEnabled(false);
Channel3.setEnabled(true);
Channel2.setEnabled(true);
Channel1.setEnabled(true);


        // TODO add your handling code here:
    }//GEN-LAST:event_Channel4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RadioClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RadioClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RadioClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RadioClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RadioClientGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Channel1;
    private javax.swing.JButton Channel2;
    private javax.swing.JButton Channel3;
    private javax.swing.JButton Channel4;
    private javax.swing.JButton RadioOff;
    private javax.swing.JButton RadioOn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    public void append(String string) {
        jTextArea1.append("\n" + string);
    }

    public void clear() {
        jTextArea1.setText("");
    }
}
