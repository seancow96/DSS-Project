package clientui;

import client.SpeakerClient;
import serviceui.Printer;

/**
 *
 * @author dominic
 */
public class SpeakerClientGUI extends javax.swing.JFrame implements Printer {

    private SpeakerClient client;

    public SpeakerClientGUI() {
        initComponents();
    }

    public SpeakerClientGUI(SpeakerClient aThis) {
        this();
        this.client = aThis;
        SpeakerOn.setEnabled(false);
        SpeakerOff.setEnabled(false);
        ConnectSpeaker.setEnabled(false);
        Playlist.setEnabled(false);
        MaxViews.setEnabled(false);
        AverageViews.setEnabled(false);

    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SpeakerOn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        SpeakerOff = new javax.swing.JButton();
        ConnectSpeaker = new javax.swing.JButton();
        MaxViews = new javax.swing.JButton();
        Playlist = new javax.swing.JButton();
        AverageViews = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 29, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        SpeakerOn.setText("On");
        SpeakerOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpeakerOnActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        SpeakerOff.setText("Off");
        SpeakerOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpeakerOffActionPerformed(evt);
            }
        });

        ConnectSpeaker.setText("Connect Device");
        ConnectSpeaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectSpeakerActionPerformed(evt);
            }
        });

        MaxViews.setText("Max Views");
        MaxViews.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaxViewsActionPerformed(evt);
            }
        });

        Playlist.setText("Playlist");
        Playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaylistActionPerformed(evt);
            }
        });

        AverageViews.setText("Average Views");
        AverageViews.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AverageViewsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SpeakerOn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ConnectSpeaker))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SpeakerOff)
                                .addGap(18, 18, 18)
                                .addComponent(Playlist)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MaxViews)
                            .addComponent(AverageViews))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 64, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpeakerOn)
                    .addComponent(ConnectSpeaker)
                    .addComponent(AverageViews))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpeakerOff)
                    .addComponent(Playlist)
                    .addComponent(MaxViews))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SpeakerOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpeakerOnActionPerformed
        client.turnspeakeron();
        SpeakerOff.setEnabled(true);
        ConnectSpeaker.setEnabled(true);
        Playlist.setEnabled(false);
        MaxViews.setEnabled(false);
        AverageViews.setEnabled(false);

    }//GEN-LAST:event_SpeakerOnActionPerformed

    private void SpeakerOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpeakerOffActionPerformed
      client.turnthespeakeroff();
      SpeakerOff.setEnabled(true);
        ConnectSpeaker.setEnabled(false);
        Playlist.setEnabled(false);
        MaxViews.setEnabled(false);
        AverageViews.setEnabled(false);

      
        // TODO add your handling code here:
    }//GEN-LAST:event_SpeakerOffActionPerformed

    private void ConnectSpeakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectSpeakerActionPerformed
    client.connectdevice();
     SpeakerOff.setEnabled(true);
     Playlist.setEnabled(true);
     MaxViews.setEnabled(true);
     AverageViews.setEnabled(true);

    
        // TODO add your handling code here:
    }//GEN-LAST:event_ConnectSpeakerActionPerformed

    private void PlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaylistActionPerformed
     SpeakerOff.setEnabled(true);
     MaxViews.setEnabled(true);
     AverageViews.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_PlaylistActionPerformed

    private void AverageViewsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AverageViewsActionPerformed
    client.averageViews();
     SpeakerOff.setEnabled(true);
     Playlist.setEnabled(true);
     MaxViews.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_AverageViewsActionPerformed

    private void MaxViewsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaxViewsActionPerformed
    client.findMaximum();
     SpeakerOff.setEnabled(true);
     Playlist.setEnabled(true);
     AverageViews.setEnabled(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_MaxViewsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpeakerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpeakerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpeakerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpeakerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpeakerClientGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AverageViews;
    private javax.swing.JButton ConnectSpeaker;
    private javax.swing.JButton MaxViews;
    private javax.swing.JButton Playlist;
    private javax.swing.JButton SpeakerOff;
    private javax.swing.JButton SpeakerOn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    public void append(String string) {
        jTextArea1.append("\n" + string);
    }

    public void clear() {
        jTextArea1.setText("");
    }
}
